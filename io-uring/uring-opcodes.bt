#!/usr/bin/env bpftrace
/**
 * uring_opcodes - report which opcodes have been used.
 *
 */

struct io_uring_sqe {
        __u8    opcode;         /* type of operation for this sqe */
        __u8    flags;          /* IOSQE_ flags */
        __u16   ioprio;         /* ioprio for the request */
        __s32   fd;             /* file descriptor to do IO on */
        union {
                __u64   off;    /* offset into file */
                __u64   addr2;
        };
        union {
                __u64   addr;   /* pointer to buffer or iovecs */
                __u64   splice_off_in;
        };
        __u32   len;            /* buffer size or number of iovecs */
        union {
                __u32  rw_flags;
                __u32           fsync_flags;
                __u16           poll_events;    /* compatibility */
                __u32           poll32_events;  /* word-reversed for BE */
                __u32           sync_range_flags;
                __u32           msg_flags;
                __u32           timeout_flags;
                __u32           accept_flags;
                __u32           cancel_flags;
                __u32           open_flags;
                __u32           statx_flags;
                __u32           fadvise_advice;
                __u32           splice_flags;
                __u32           rename_flags;
                __u32           unlink_flags;
                __u32           hardlink_flags;
                __u32           xattr_flags;
        };
        __u64   user_data;      /* data to be passed back at completion time */
        /* pack this to avoid bogus arm OABI complaints */
        union {
                /* index into fixed buffers, if used */
                __u16   buf_index;
                /* for grouped buffer selection */
                __u16   buf_group;
        } __attribute__((packed));
        /* personality to use, if used */
        __u16   personality;
        union {
                __s32   splice_fd_in;
                __u32   file_index;
        };
        __u64   addr3;
        __u64   __pad2[1];
}

BEGIN {
    printf("Tracing io_uring kernel op-codes... Hit Ctrl-C to end.\n");

    @opcode_names[0]  = "NOP";
    @opcode_names[1]  = "READV";
    @opcode_names[2]  = "WRITEV";
    @opcode_names[3]  = "FSYNC";
    @opcode_names[4]  = "READ_FIXED";
    @opcode_names[5]  = "WRITE_FIXED";
    @opcode_names[6]  = "POLL_ADD";
    @opcode_names[7]  = "POLL_REMOVE";
    @opcode_names[8]  = "SYNC_FILE_RANGE";
    @opcode_names[9]  = "SENDMSG";
    @opcode_names[10] = "RECVMSG";
    @opcode_names[11] = "TIMEOUT";
    @opcode_names[12] = "TIMEOUT_REMOVE";
    @opcode_names[13] = "ACCEPT";
    @opcode_names[14] = "ASYNC_CANCEL";
    @opcode_names[15] = "LINK_TIMEOUT";
    @opcode_names[16] = "CONNECT";
    @opcode_names[17] = "FALLOCATE";
    @opcode_names[18] = "OPENAT";
    @opcode_names[19] = "CLOSE";
    @opcode_names[20] = "FILES_UPDATE";
    @opcode_names[21] = "STATX";
    @opcode_names[22] = "READ";
    @opcode_names[23] = "WRITE";
    @opcode_names[24] = "FADVISE";
    @opcode_names[25] = "MADVISE";
    @opcode_names[26] = "SEND";
    @opcode_names[27] = "RECV";
    @opcode_names[28] = "OPENAT2";
    @opcode_names[29] = "EPOLL_CTL";
    @opcode_names[30] = "SPLICE";
    @opcode_names[31] = "PROVIDE_BUFFERS";
    @opcode_names[32] = "REMOVE_BUFFERS";
    @opcode_names[33] = "TEE";
    @opcode_names[34] = "SHUTDOWN";
    @opcode_names[35] = "RENAMEAT";
    @opcode_names[36] = "UNLINKAT";
    @opcode_names[37] = "MKDIRAT";
    @opcode_names[38] = "SYMLINKAT";
    @opcode_names[39] = "LINKAT";
    @opcode_names[40] = "FGETXATTR";
    @opcode_names[41] = "FSETXATTR";
    @opcode_names[42] = "GETXATTR";
    @opcode_names[43] = "SETXATTR";
}

tracepoint:io_uring:io_uring_submit_sqe {
    @opcode[@opcode_names[args->opcode]] = count();
}

END {
    clear(@opcode_names)
}
